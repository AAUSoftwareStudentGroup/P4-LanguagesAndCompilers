Program -> GlobalStatements eof

GlobalStatements -> GlobalStatement GlobalStatementsP
GlobalStatementsP -> newline GlobalStatement GlobalStatementsP
                   | EPSILON

GlobalStatement -> Interrupt
                 | Statement

Interrupt -> interrupt ( intLiteral ) indent Statements dedent

Statements -> Statement StatementsP
StatementsP -> newline Statement StatementsP
             | EPSILON

Statement -> EPSILON
           | IdentifierDeclaration 
           | RegisterStatement
           | Assignment
           | IfStatement 
           | WhileStatement

IdentifierDeclaration -> intType identifier
                       | booleanType identifier

RegisterStatement -> registerType RegisterOperation

RegisterOperation -> ( intLiteral ) { Expression } = Expression
                   | identifier

Assignment -> identifier BitSelector = Expression 

BitSelector -> { Expression }
             | EPSILON

IfStatement -> if ( Expression ) indent Statements dedent 
		   
WhileStatement -> while ( Expression ) indent Statements dedent
        
Expression -> OrExpression

OrExpression -> AndExpression OrExpressionP
OrExpressionP -> or AndExpression OrExpressionP
               | EPSILON

AndExpression -> EqExpression AndExpressionP
AndExpressionP -> and EqExpression AndExpressionP
                | EPSILON

EqExpression -> RelationalExpression EqExpressionP
EqExpressionP -> = RelationalExpression EqExpressionP
               | EPSILON

RelationalExpression -> AddSubExpression RelationalExpressionP
RelationalExpressionP -> < AddSubExpression RelationalExpressionP
                       | > AddSubExpression RelationalExpressionP
                       | EPSILON

AddSubExpression -> MulDivExpression AddSubExpressionP
AddSubExpressionP -> + MulDivExpression AddSubExpressionP
                   | - MulDivExpression AddSubExpressionP
                   | EPSILON

MulDivExpression -> PrimaryExpression MulDivExpressionP
MulDivExpressionP -> / PrimaryExpression MulDivExpressionP
                   | * PrimaryExpression MulDivExpressionP
                   | EPSILON

PrimaryExpression -> intLiteral
                   | boolLiteral
                   | identifier BitSelector
                   | ( Expression )
                   | ! PrimaryExpression
                   | registerType ( intLiteral ) BitSelector
                   | true
                   | false
